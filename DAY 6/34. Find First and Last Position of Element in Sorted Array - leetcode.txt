class Solution {
    
public:
    int firstoccurence(vector<int>& nums,int target){
        int s = 0;
        int e = nums.size()-1;
        int mid = s+(e-s)/2;
        int ans =-1;
        if(nums[mid] == target){
            ans = mid;
            e = mid-1;
        }
        else if(nums[mid]<target){
            s = mid+1;
        }
        else{
            e = mid-1;
        }
        mid = s+(e-s)/2;
        return ans;
    }
    int lastoccurence(vector<int>& nums,int target){
        int s = 0;
        int e = nums.size()-1;
        int mid = s+(e-s)/2;
        int ans =-1;
        if(nums[mid] == target){
            ans = mid;
            s = mid+1;
        }
        else if(nums[mid]<target){
            s = mid+1;
        }
        else{
            e = mid-1;
        }
        mid = s+(e-s)/2;
        return ans;
    }

    vector<int> searchRange(vector<int>& nums, int target) {
    
       vector<int>ans;
       ans[1] = firstoccurence(nums,target);
       ans[2]= lastoccurence(nums,target);
       return ans;
    }
};